Particle_Projectile:
  type: world
  debug: true
  events:
    on check command:
    - determine passively fulfilled
    - shoot e@item_projectile[item=i@1] origin:<player.location.add[0,1.3,0]> speed:3 shooter:<player> script:Particle_Projectile_Effect no_rotate save:Base_entity
    - define Projectile <entry[Base_entity].shot_entities.get[1]>
    - adjust <server.list_online_players> hide_entity:<def[Projectile]>
    - repeat 10 {
      - playeffect <def[Projectile].location> effect:SMOKE_NORMAL visibility:30 quantity:30 offset:0.2
      - wait 0.2t
    }

Particle_Projectile_Effect:
  type: task
  debug: true
  speed: 0
  script:
    - remove <def[last_entity]>
    - if <def[hit_entities].is_empty> {
      - queue clear
    }
    - define Target <def[hit_entities].get[1]||null>
    - if <def[hit_entities].get[1]> == <player> {
      - define Target <player.target.within[4]||null>
    }
    - if <def[Target]> == null {
      - queue clear
    }
    - hurt 10 <def[Target]> cause:custom


Combat_Effect:
  type: world
  debug: false
  events:
    on player damages entity:
    - flag <context.damager> In_Combat duration:20s
    - if <context.entity> == player {
      - flag <context.entity> In_Combat duration:20s
    }

## <def[1]> is the duration ## <def[2]> is the value ##
Damage_Boost_Effect:
  type: task
  debug: false
  speed: 0
  script:
    - yaml id:<player.uuid> set General.Damage_Modifier:+:<def[2]>
    - wait <def[1].as_duration>
    - yaml id:<player.uuid> set General.Damage_Modifier:-:<def[2]>

## <def[1]> is the duration ## <def[2]> is the target ##
Stun_Effect:
  type: task
  debug: false
  speed: 0
  script:
    - flag <def[2]> Stun_Effect duration:<def[1].as_duration>
    - spawn e@armor_stand[visible=false;marker=true;gravity=false] <def[2].location> save:marker
    - mount <def[2]>|<entry[marker].spawned_entities.get[1]> <def[2].location>
    - run Stun_Message def:<def[1]>|<def[2]>
    - wait <def[1].as_duration>
    - if <player.has_flag[Stun_Effect]> {
      - teleport <def[2]> <def[2].location.add[0,0.8,0]>
    }
    - flag <def[2]> Stun_Effect:!
    - wait 1t
    - remove <entry[marker].spawned_entities.get[1]>

Stun_Message:
  type: task
  debug: false
  speed: 0
  script:
    - if !<def[2].is_player> {
      - queue clear
    }
    - repeat <def[1].as_int> {
      - actionbar "<&e><&l>Stunned for another <&a><def[2].flag[Stun_Effect].expiration.in_seconds.round>s<&e><&l>!" targets:<def[2]>
      - wait 1s
    }
    - actionbar "<&a><&l>Stun has ended!" targets:<def[2]>


Stun_Handler: 
  type: world 
  debug: false 
  events: 
    on player steers entity: 
    - if <player.has_flag[Stun_Effect]> { 
      - determine cancelled 
    }

Silence_Effect:
  type: task
  debug: true
  speed: 0
  script:
    - flag <def[2]> Silence_Effect duration:<def[1].as_duration>
    - repeat <def[1].as_int> {
      - if !<def[2].has_flag[Stun_Effect]> {
        - actionbar "<&e><&l>Silenced for another <&a><def[2].flag[Silence_Effect].expiration.in_seconds.round>s<&e><&l>!" targets:<def[2]>   
      }
      - wait 1s 
    }
    - actionbar "<&a><&l>Silenced has ended!" targets:<def[2]>