Home:
  type: command
  debug: false
  name: Home
  usage: /Home (set/player)
  description: Teleports you to your home. Alternatively set your home or teleport to another player's home, which requires an additional permission. 
  permission: utility.home
  permission message: <&7>Sorry, <&6><player.name><&7>. You cannot use this command because you do not have the permission <&f>'<permission>'<&7>!
  tab complete: 
  - if !<player.is_op||<context.server>> queue clear 
  - determine <server.list_players.parse[name].filter[starts_with[<context.args.last>]]>
  script:
  - if <context.args.size> == 0 {
    - if <player.has_flag[Home]> {
      - teleport <player.flag[Home]>
      - narrate "<&7>You have spawned home."
      - queue clear
    }
    else {
      - narrate "<&7>You do not have any home set!"
      - queue clear
    }
  }
  else if <context.args.size> == 1 {
    - define Player p@<context.args.get[1]>
    - if <context.args.get[1]> == set {
      - flag player Home:<player.location>
      - narrate "<&7>You have set a new home at <&6><player.location.simple><&7>!"
      - queue clear
    }
    else if <def[Player]> matches player {
      - if <player.has_permission[utility.home.extended]> {
        - if <def[player].has_flag[Home]> {
          - teleport <player.flag[Home]>
          - narrate "<&7>You have teleported to the home of <&6><context.args.get[1]><&7>."
          - queue clear
        }
        else {
          - narrate "<&6><context.args.get[1]> <&7>does not have a home set!"
        }
      }
      else {
        - narrate "<&7>Sorry, <&6><player.name><&7>. You cannot use this command because you do not have the permission <&f>'utility.home.extended'<&7>!"
      }
    }
    else {
      - narrate "<&7>The player <&6><context.args.get[1]> <&7>doesn't exist!"
    }
  }
  else {
    - narrate "<&7>Too many arguments! <&f>'/Home (set/player)'"
  }

Warp:
  type: command
  debug: false
  name: Warp
  usage: /Warp (create/list/delete) (name) (player)
  description: Teleports you to a saved location.
  permission: utility.warp
  permission message: <&7>Sorry, <&6><player.name><&7>. You cannot use this command because you do not have the permission <&f>'<permission>'<&7>!
  tab complete: 
  - if !<player.is_op||<context.server>> queue clear 
  - determine <yaml[Warps].list_keys[Warp_List].filter[starts_with[<context.args.last>]]>
  script:
  - if <context.args.size> == 0 {
    - narrate "<&7>You must specify a warp!"
    - queue clear
  }
  - if !<yaml.list.contains[Warps]> {
      - yaml "load:/Yml Files/Warps.yml" id:Warps
  }
  else if <context.args.size> == 1 {
    - if <context.args.get[1]> == list {
      - narrate '<&6>Warps<&co> <&f><yaml[Warps].list_keys[Warp_List].formatted>'
      - queue clear
    }
    else if <context.args.get[1]> == create {
      - narrate '<&7>You must enter a name for the warp!'
      - queue clear
    }
    else if <context.args.get[1]> == delete {
      - narrate '<&7>You must enter the name of the warp that you want to delete!'
      - queue clear
    }
    else if <yaml[Warps].contains[Warp_List.<context.args.get[1]>]> {
      - teleport <player> <yaml[Warps].read[Warp_List.<context.args.get[1]>]>
      - narrate '<&7>You have warped to <&6><context.args.get[1]><&7>!'
      - queue clear
    }
    else {
      - narrate '<&7>No warp with that name exists!'
      - queue clear
    }
  }
  else if <context.args.size> == 2 {
    - if <context.args.get[1]> == create {
      - if <yaml[Warps].list_keys[Warp_List].contains[<context.args.get[2]>]> {
        - narrate "<&7>That warp already exists!"
        - queue clear
      }
      - yaml id:Warps set Warp_List.<context.args.get[2]>:<player.location>
      - yaml 'savefile:/Yml Files/Warps.yml' id:Warps
      - narrate '<&7>You have created the warp <&6><context.args.get[2]> <&7>at <&6><player.location.simple><&7>!'
      - queue clear
    }
    else if <context.args.get[1]> == delete {
      - yaml id:Warps set Warp_List.<context.args.get[2]>:!
      - yaml 'savefile:/Yml Files/Warps.yml' id:Warps
      - narrate '<&7>You deleted the warp <&6><context.args.get[2]><&7>!'
      - queue clear
    }
    else if <server.list_online_players.contains[<context.args.get[2]>]>
      - define Target <server.match_offline_player[<context.args.get[2]>]||null>
      - if <def[Target]> == null {
        - narrate "<&7>No player can be found by that name!"
        - queue clear
      }
      else if <context.server.not> {
        - teleport p@<server.list_online_players.closest_to[<context.args.get[2]>]> <yaml[Warps].read[Warp_List.<context.args.get[1]>]>
        - narrate "<&7>You have been warped to <&6><context.args.get[1]><&7>!" targets:p@<context.args.get[2]>
        - narrate "<&7>You have warped <&6><server.list_online_players.closest_to[<context.args.get[2]>]> <&7>to <&6><context.args.get[1]><&7>!" targets:<player>
        - queue clear
      }
    }
  else {
    - narrate "<&7>Too many arguments! <&f>'/Warp (create/list/delete) (name) (player)'"
    - queue clear
  }

Mob:
  type: command
  debug: false
  name: Mob
  usage: /Mob (entity/list) (amount) (x,y,z,World)
  description: Spawn entities or display a list of spawnable entities.
  permission: utility.mob
  permission message: <&7>Sorry, <&6><player.name><&7>. You cannot use this command because you do not have the permission <&f>'<permission>'<&7>!
  tab complete: 
  - if !<player.is_op||<context.server>> queue clear 
  - determine <li@BAT|BLAZE|CAVE_SPIDER|CHICKEN|COW|CREEPER|DONKEY|ELDER_GUARDIAN|ENDER_DRAGON|ENDERMAN|ENDERMITE|EVOKER|GHAST|GIANT|GIANT|HORSE|HUSK|IRON_GOLEM|LLAMA|MAGMA_CUBE|MULE|MUSHROOM_COW|OCELOT|PIG|PIG_ZOMBIE|POLAR_BEAR|RABBIT|SHEEP|SHULKER|SILVERFISH|SKELETON|SKELETON_HORSE|SLIME|SNOWMAN|SPIDER|SQUID|STRAY|VEX|VILLAGER|VINDICATOR|WITCH|WITHER|WITHER_SKELETON|WOLF|ZOMBIE|ZOMBIE_HORSE|ZOMBIE_VILLAGER.filter[starts_with[<context.args.last>]]>
  script:
  - if <context.args.size> == 0 {
    - narrate "<&7>You must specify an entity!"
    - queue clear
  }
  else if <context.args.size> == 1 {
    - if <context.args.get[1]> matches entity {
      - spawn e@<context.args.get[1]> <player.location.cursor_on[50].add[0,1,0].center>
      - narrate "<&7>You have spawned <&6>1 <context.args.get[1]> <&7>at <&6><player.location.cursor_on[50].add[0,1,0].simple><&7>!"
      - queue clear
    }
    else if <context.args.get[1]> == list {
      - narrate '<&6>Entities<&co> <&f><li@BAT|BLAZE|CAVE_SPIDER|CHICKEN|COW|CREEPER|DONKEY|ELDER_GUARDIAN|ENDER_DRAGON|ENDERMAN|ENDERMITE|EVOKER|GHAST|GIANT|GIANT|HORSE|HUSK|IRON_GOLEM|LLAMA|MAGMA_CUBE|MULE|MUSHROOM_COW|OCELOT|PIG|PIG_ZOMBIE|POLAR_BEAR|RABBIT|SHEEP|SHULKER|SILVERFISH|SKELETON|SKELETON_HORSE|SLIME|SNOWMAN|SPIDER|SQUID|STRAY|VEX|VILLAGER|VINDICATOR|WITCH|WITHER|WITHER_SKELETON|WOLF|ZOMBIE|ZOMBIE_HORSE|ZOMBIE_VILLAGER.formatted>'
      - queue clear
    }
    else {
      - narrate "<&7>This entity doesn't exist! <&7>Did you mean<&co> <&6><li@BAT|BLAZE|CAVE_SPIDER|CHICKEN|COW|CREEPER|DONKEY|ELDER_GUARDIAN|ENDER_DRAGON|ENDERMAN|ENDERMITE|EVOKER|GHAST|GIANT|GIANT|HORSE|HUSK|IRON_GOLEM|LLAMA|MAGMA_CUBE|MULE|MUSHROOM_COW|OCELOT|PIG|PIG_ZOMBIE|POLAR_BEAR|RABBIT|SHEEP|SHULKER|SILVERFISH|SKELETON|SKELETON_HORSE|SLIME|SNOWMAN|SPIDER|SQUID|STRAY|VEX|VILLAGER|VINDICATOR|WITCH|WITHER|WITHER_SKELETON|WOLF|ZOMBIE|ZOMBIE_HORSE|ZOMBIE_VILLAGER.closest_to[<context.args.get[1]>]>"
      - queue clear 
    }
  }
  else if <context.args.size> == 2 {
    - if <context.args.get[1]> !matches entity {
      - narrate "<&7>This entity doesn't exist! <&7>Did you mean<&co> <&6><li@BAT|BLAZE|CAVE_SPIDER|CHICKEN|COW|CREEPER|DONKEY|ELDER_GUARDIAN|ENDER_DRAGON|ENDERMAN|ENDERMITE|EVOKER|GHAST|GIANT|GIANT|HORSE|HUSK|IRON_GOLEM|LLAMA|MAGMA_CUBE|MULE|MUSHROOM_COW|OCELOT|PIG|PIG_ZOMBIE|POLAR_BEAR|RABBIT|SHEEP|SHULKER|SILVERFISH|SKELETON|SKELETON_HORSE|SLIME|SNOWMAN|SPIDER|SQUID|STRAY|VEX|VILLAGER|VINDICATOR|WITCH|WITHER|WITHER_SKELETON|WOLF|ZOMBIE|ZOMBIE_HORSE|ZOMBIE_VILLAGER.closest_to[<context.args.get[1]>]>"
      - queue clear
    }
    - if <context.args.get[2]> matches number {
      - repeat <context.args.get[2]> {
        - spawn e@<context.args.get[1]> <player.location.cursor_on[50].add[0,1,0].center>
      }
      - narrate "<&7>You have spawned <&6><context.args.get[2]> <context.args.get[1]> <&7>at <&6><player.location.cursor_on[50].add[0,1,0].simple><&7>!"
      - queue clear
    }
    else {
      - narrate '<&7>You must specify a valid number!'
      - queue clear
    }
  }
  else if <context.args.size> == 3 {
    - if <context.args.get[1]> !matches entity {
      - narrate "<&7>This entity doesn't exist! Did you mean<&co> <&6><li@BAT|BLAZE|CAVE_SPIDER|CHICKEN|COW|CREEPER|DONKEY|ELDER_GUARDIAN|ENDER_DRAGON|ENDERMAN|ENDERMITE|EVOKER|GHAST|GIANT|GIANT|HORSE|HUSK|IRON_GOLEM|LLAMA|MAGMA_CUBE|MULE|MUSHROOM_COW|OCELOT|PIG|PIG_ZOMBIE|POLAR_BEAR|RABBIT|SHEEP|SHULKER|SILVERFISH|SKELETON|SKELETON_HORSE|SLIME|SNOWMAN|SPIDER|SQUID|STRAY|VEX|VILLAGER|VINDICATOR|WITCH|WITHER|WITHER_SKELETON|WOLF|ZOMBIE|ZOMBIE_HORSE|ZOMBIE_VILLAGER.closest_to[<context.args.get[1]>]>"
      - queue clear
    }
    - if <context.args.get[3]> !matches location {
      - narrate "<&7>You must use the following location format<&co> <&6>x,y,z,world"
      - queue clear
    }
    - if <context.args.get[2]> matches number {
      - define Location l@<context.args.get[3]>
      - repeat <context.args.get[2]> {
        - spawn e@<context.args.get[1]> <def[Location].center>
      }
      - narrate "<&7>You have spawned <&6><context.args.get[2]> <context.args.get[1]> <&7>at <&6><def[Location].simple><&7>!"
      - queue clear
    }
    else {
      - narrate '<&7>You must specify a valid number!'
      - queue clear
    }
  }
  else {
    - narrate "<&7>Too many arguments! <&f>'/Mob (entity/list) (amount) (x,y,z,World)'"
  }

Repair_Command:
  type: command
  debug: false
  name: Repair
  usage: /Repair
  description: Changes the item stack in your hand to 64 of the item.
  permission: utility.repair
  permission message: <&7>Sorry, <&6><player.name><&7>. You cannot use this command because you do not have the permission <&f>'<permission>'<&7>!
  script:
  - if <player.item_in_hand> == i@air {
    - narrate "<&7>You must have an item in your hand!"
  }
  else {
    - adjust <player.item_in_hand> durability:0 save:item_repaired
    - take iteminhand
    - give <entry[item_repaired].result> 
    - narrate "<&7>Repaired <&6><player.item_in_hand.formatted><&7>!"
  }

More_Command:
  type: command
  debug: false
  name: More
  usage: /More
  description: Changes the item stack in your hand to 64 of the item.
  permission: utility.more
  permission message: <&7>Sorry, <&6><player.name><&7>. You cannot use this command because you do not have the permission <&f>'<permission>'<&7>!
  script:
  - if <player.item_in_hand> == i@air {
    - narrate "<&7>You must have an item in your hand!"
  }
  else {
    - adjust <player.item_in_hand> quantity:<player.item_in_hand.max_stack> save:new_stack
    - take iteminhand quantity:<player.item_in_hand.quantity>
    - give <entry[new_stack].result> 
    - narrate "<&7>Increased <&6><player.item_in_hand.formatted><&7> to <&6><player.item_in_hand.max_stack><&7>!"
  }

Heal_Command:
  type: command
  debug: false
  name: Heal
  usage: /Heal (player)
  description: Fully restores a player's health and hunger.
  permission: utility.heal
  permission message: <&7>Sorry, <&6><player.name><&7>. You cannot use this command because you do not have the permission <&f>'<permission>'<&7>!
  tab complete: 
  - if !<player.is_op||<context.server>> queue clear 
  - determine <server.list_online_players.parse[name].filter[starts_with[<context.args.last>]]>
  script:
  - if <context.args.size> == 0 {
    - heal <player>
    - feed <player>
    - narrate "<&7>You have been healed!"
    - queue clear
  }
  else if <context.args.size> == 1 {
    - if <context.args.get[1]> matches onlineplayer {
      - heal p@<context.args.get[1]>
      - feed p@<context.args.get[1]>
      - narrate "<&7>You have been healed!" targets:p@<context.args.get[1]>
      - narrate "<&7>You have healed <&6><context.args.get[1]><&7>!"
      - queue clear
    }
    else {
      - narrate "<&7>No player can be found by that name!"
      - queue clear
    }
  }
  else {
    - narrate "<&7>Too many arguments! <&f>/Heal (player)"
  }

Spawn:
  type: command
  debug: false
  name: Spawn
  usage: /Spawn (player)
  description: Teleports you to the world spawn.
  permission: utility.spawn
  permission message: <&7>Sorry, <&6><player.name><&7>. You cannot use this command because you do not have the permission <&f>'<permission>'<&7>!
  tab complete: 
  - if !<player.is_op||<context.server>> queue clear 
  - determine <server.list_online_players.parse[name].filter[starts_with[<context.args.last>]]>
  script:
  - if <context.args.size> == 0 {
    - teleport <player> <player.location.world.spawn_location.center>
    - narrate "<&7>You have teleported to the spawn in <&6><player.world.name><&7>!"
    - queue clear
  }
  else if <context.args.size> == 1 {
    - if <context.args.get[1]> matches onlineplayer {
      - define player p@<context.args.get[1]>
      - teleport p@<context.args.get[1]> <def[player].location.world.spawn_location.center>
      - narrate "<&7>You have teleported to the spawn in <&6><def[player].location.world><&7>!" targets:p@<context.args.get[1]>
      - narrate "<&6><context.args.get[1]> <&7>has been teleported to the spawn in <&6><def[player].location.world><&7>!"
      - queue clear
    }
    else {
      - narrate "<&7>No player can be found by that name!"
      - queue clear
    }
  }
  else {
    - narrate "<&7>Too many arguments! <&f>'/Spawn (player)'"
  }

Inventory_Command:
  type: command
  debug: false
  name: Inventory
  usage: /Inventory (player)
  description: Edit a player's inventory.
  permission: utility.inventory
  permission message: <&7>Sorry, <&6><player.name><&7>. You cannot use this command because you do not have the permission <&f>'<permission>'<&7>!
  tab complete: 
  - if !<player.is_op||<context.server>> queue clear 
  - determine <server.list_online_players.parse[name].filter[starts_with[<context.args.last>]]>
  script:
  - if <context.args.size> == 0 {
    - narrate "<&7>You must specify a player!"
    - queue clear
  }
  else if <context.args.size> == 1 {
    - if <context.args.get[1]> matches onlineplayer {
      - narrate "<&7>Checking <&6><context.args.get[1]><&7>!"
      - define Player p@<context.args.get[1]>
      - inventory open d:<def[Player].inventory> 
      - queue clear
    }
    else {
      - narrate "<&7>You must specify an online player!"
      - queue clear
    }
  }
  else {
    - narrate "<&7>Too many arguments! <&f>'/Inventory (player)'"
  }

Gm_Command:
  type: command
  debug: false
  name: Gm
  usage: /Gm (player)
  description: Changes a player's gamemode. Doing the command without any variables will open a menu.
  permission: utility.gamemode
  permission message: <&7>Sorry, <&6><player.name><&7>. You cannot use this command because you do not have the permission <&f>'<permission>'<&7>!
  tab complete: 
  - if !<player.is_op||<context.server>> queue clear 
  - determine <server.list_online_players.parse[name].filter[starts_with[<context.args.last>]]>
  script:
  - if <context.args.size> == 0 {
    - inventory open d:in@Gamemode_Menu
    - queue clear
  }
  - if <context.args.size> == 1 {
    - if <context.args.get[1]> == 0 {
      - adjust <player> gamemode:survival
      - narrate "<&7>You have switched to <&6>Survival Mode<&7>!"
      - queue clear
    }
    else if <context.args.get[1]> == 1 {
      - adjust <player> gamemode:creative
      - narrate "<&7>You have switched to <&6>Creative Mode<&7>!"
      - queue clear
    }
    else if <context.args.get[1]> == 2 {
      - adjust <player> gamemode:adventure
      - narrate "<&7>You have switched to <&6>Adventure Mode<&7>!"
      - queue clear
    }
    else if <context.args.get[1]> == 3 {
      - adjust <player> gamemode:spectator
      - narrate "<&7>You have switched to <&6>Spectator Mode<&7>!"
      - queue clear
    }
    else {
      - narrate "<&7>You must specify a valid gamemode!"
      - queue clear
    }
  }
  else if <context.args.size> == 2 {
    - define Target <server.match_offline_player[<context.args.get[2]>]||null>
    - if <def[Target]> == null {
      - narrate "<&7>No player can be found by that name!"
      - queue clear
    }
    - if <context.args.get[1]> == 0 {
      - adjust p@<context.args.get[2]> gamemode:survival
      - narrate "<&7>You have switched to <&6>Survival Mode<&7>!" targets:p@<context.args.get[2]>
      - narrate "<&7>You have switched <&6><context.args.get[2]><&7> to <&6>Survival Mode<&7>!"
      - queue clear
    }
    else if <context.args.get[1]> == 1 {
      - adjust p@<context.args.get[2]> gamemode:creative
      - narrate "<&7>You have switched to <&6>Creative Mode<&7>!" targets:p@<context.args.get[2]>
      - narrate "<&7>You have switched <&6><context.args.get[2]><&7> to <&6>Creative Mode<&7>!"
      - queue clear
    }
    else if <context.args.get[1]> == 2 {
      - adjust p@<context.args.get[2]> gamemode:adventure
      - narrate "<&7>You have switched to <&6>Adventure Mode<&7>!" targets:p@<context.args.get[2]>
      - narrate "<&7>You have switched <&6><context.args.get[2]><&7> to <&6>Adventure Mode<&7>!"
      - queue clear
    }
    else if <context.args.get[1]> == 3 {
      - adjust p@<context.args.get[2]> gamemode:spectator
      - narrate "<&7>You have switched to <&6>Spectator Mode<&7>!" targets:p@<context.args.get[2]>
      - narrate "<&7>You have switched <&6><context.args.get[2]><&7> to <&6>Spectator Mode<&7>!"
      - queue clear
    }
    else {
      - narrate "<&7>You must specify a valid gamemode!"
      - queue clear
    }
  }
  else {
    - narrate "<&7>Too many arguments! <&f>'/Gm (player)'"
  }

Gamemode_Command:
  type: command
  debug: false
  name: Gamemode
  usage: /Gamemode (player)
  description: Changes a player's gamemode. Doing the command without any variables will open a menu.
  permission: utility.gamemode
  permission message: <&7>Sorry, <&6><player.name><&7>. You cannot use this command because you do not have the permission <&f>'<permission>'<&7>!
  tab complete: 
  - if !<player.is_op||<context.server>> queue clear 
  - determine <server.list_online_players.parse[name].filter[starts_with[<context.args.last>]]>
  script:
  - if <context.args.size> == 0 {
    - inventory open d:in@Gamemode_Menu
    - queue clear
  }
  - if <context.args.size> == 1 {
    - if <context.args.get[1]> == 0 {
      - adjust <player> gamemode:survival
      - narrate "<&7>You have switched to <&6>Survival Mode<&7>!"
      - queue clear
    }
    else if <context.args.get[1]> == 1 {
      - adjust <player> gamemode:creative
      - narrate "<&7>You have switched to <&6>Creative Mode<&7>!"
      - queue clear
    }
    else if <context.args.get[1]> == 2 {
      - adjust <player> gamemode:adventure
      - narrate "<&7>You have switched to <&6>Adventure Mode<&7>!"
      - queue clear
    }
    else if <context.args.get[1]> == 3 {
      - adjust <player> gamemode:spectator
      - narrate "<&7>You have switched to <&6>Spectator Mode<&7>!"
      - queue clear
    }
    else {
      - narrate "<&7>You must specify a valid gamemode!"
      - queue clear
    }
  }
  else if <context.args.size> == 2 {
    - define Target <server.match_offline_player[<context.args.get[2]>]||null>
    - if <def[Target]> == null {
      - narrate "<&7>No player can be found by that name!"
      - queue clear
    }
    - if <context.args.get[1]> == 0 {
      - adjust p@<context.args.get[2]> gamemode:survival
      - narrate "<&7>You have switched to <&6>Survival Mode<&7>!" targets:p@<context.args.get[2]>
      - narrate "<&7>You have switched <&6><context.args.get[2]><&7> to <&6>Survival Mode<&7>!"
      - queue clear
    }
    else if <context.args.get[1]> == 1 {
      - adjust p@<context.args.get[2]> gamemode:creative
      - narrate "<&7>You have switched to <&6>Creative Mode<&7>!" targets:p@<context.args.get[2]>
      - narrate "<&7>You have switched <&6><context.args.get[2]><&7> to <&6>Creative Mode<&7>!"
      - queue clear
    }
    else if <context.args.get[1]> == 2 {
      - adjust p@<context.args.get[2]> gamemode:adventure
      - narrate "<&7>You have switched to <&6>Adventure Mode<&7>!" targets:p@<context.args.get[2]>
      - narrate "<&7>You have switched <&6><context.args.get[2]><&7> to <&6>Adventure Mode<&7>!"
      - queue clear
    }
    else if <context.args.get[1]> == 3 {
      - adjust p@<context.args.get[2]> gamemode:spectator
      - narrate "<&7>You have switched to <&6>Spectator Mode<&7>!" targets:p@<context.args.get[2]>
      - narrate "<&7>You have switched <&6><context.args.get[2]><&7> to <&6>Spectator Mode<&7>!"
      - queue clear
    }
    else {
      - narrate "<&7>You must specify a valid gamemode!"
      - queue clear
    }
  }
  else {
    - narrate "<&7>Too many arguments! <&f>'/Gm (player)'"
  }

Gamemode_Menu:
  type: Inventory
  inventory: HOPPER
  title: <&6><&l>Select Gamemode<&co>
  slots:
  - "[i@Survival_Icon] [i@Creative_Icon] [i@Adventure_Icon] [i@Spectator_Icon] [i@Exit_Icon]"

Gamemode_Menu_Handler:
  type: world
  debug: false
  events:
    on player clicks in Gamemode_Menu:
    - determine cancelled
    on player drags in Gamemode_Menu:
    - determine cancelled
    on player clicks Survival_Icon in Gamemode_Menu:
    - adjust <player> gamemode:survival
    - inventory close
    - narrate "<&7>You have switched to <&6>Survival Mode<&7>!"
    on player clicks Creative_Icon in Gamemode_Menu:
    - adjust <player> gamemode:creative
    - inventory close
    - narrate "<&7>You have switched to <&6>Creative Mode<&7>!"
    on player clicks Adventure_Icon in Gamemode_Menu:
    - adjust <player> gamemode:adventure
    - inventory close
    - narrate "<&7>You have switched to <&6>Adventure Mode<&7>!"
    on player clicks Spectator_Icon in Gamemode_Menu:
    - adjust <player> gamemode:spectator
    - inventory close
    - narrate "<&7>You have switched to <&6>Spectator Mode<&7>!"
    on player clicks Exit_Icon in Gamemode_Menu:
    - inventory close

Survival_Icon:
  type: item
  material: flint_and_steel
  display name: <&6>Survival
  lore:
  - <&a>Click here to switch.

Creative_Icon:
  type: item
  material: obsidian
  display name: <&6>Creative
  lore:
  - <&a>Click here to switch.

Adventure_Icon:
  type: item
  material: shield
  display name: <&6>Adventure
  lore:
  - <&a>Click here to switch.

Spectator_Icon:
  type: item
  material: eye_of_ender
  display name: <&6>Spectator
  lore:
  - <&a>Click here to switch.

Exit_Icon:
  type: item
  material: barrier
  display name: <&6>Exit
  lore:
  - <&a>Click here to exit the menu.

Item_Command:
  type: command
  debug: false
  name: Item
  usage: /Item (item) (amount) (name) (lore)
  description: Create items with custom name and lore. For spaces in name and lore, use an underscore. For new line in the lore, a pipe symbol.
  permission: utility.item
  permission message: <&7>Sorry, <&6><player.name><&7>. You cannot use this command because you do not have the permission <&f>'<permission>'<&7>!
  tab complete: 
  - if !<player.is_op||<context.server>> queue clear 
  - determine <server.list_online_players.parse[name].filter[starts_with[<context.args.last>]]>
  script:
  - if <context.args.size> == 0 {
    - narrate "<&7>You must specify an item!"
    - queue clear
  }
  else if <context.args.size> == 1 {
    - if <context.args.get[1]> matches item {
      - give i@<context.args.get[1]> quantity:1
      - narrate "<&7><player.name> created <&6>1<&7> of <&6><context.args.get[1]><&7>!" targets:<server.list_online_ops>
      - queue clear
    }
    else {
      - narrate "<&7>No item can be found by that name!"
      - queue clear
    }
  }
  else if <context.args.size> == 2 {
    - if <context.args.get[1]> !matches item {
      - narrate "<&7>No item can be found by that name!"
      - queue clear
    }
    else if <context.args.get[2]> !matches number {
      - narrate "<&7>You must specify a proper amount!"
      - queue clear
    }
    else {
      - give i@<context.args.get[1]> quantity:<context.args.get[2]>
      - narrate "<&7><player.name> created <&6><context.args.get[2]><&7> of <&6><context.args.get[1]><&7>!" targets:<server.list_online_ops>
      - queue clear
    }
  }
  else if <context.args.size> == 3 {
    - define Name el@<context.args.get[3].replace[&].with[&ss]>
    - if i@<context.args.get[1]> !matches item {
      - narrate "<&7>No item can be found by that name!"
      - queue clear
    }
    else if <context.args.get[2]> !matches number {
      - narrate "<&7>You must specify a proper amount!"
      - queue clear
    }
    else {
      - give i@<context.args.get[1]>[display_name=<def[Name].replace[_].with[<&sp>]>] quantity:<context.args.get[2]>
      - narrate "<&7><player.name> created <&f><context.args.get[2]><&7> of <&f>[<context.args.get[1]>]" targets:<server.list_online_ops>
      - queue clear
    }
  }
  else if <context.args.size> == 4 {
    - define Name el@<context.args.get[3].replace[&].with[&ss]>
    - define Lore el@<context.args.get[4].replace[&].with[&ss]>
    - if i@<context.args.get[1]> !matches item {
      - narrate "<&7>No item can be found by that name!"
      - queue clear
    }
    else if <context.args.get[2]> !matches number {
      - narrate "<&7>You must specify a proper amount!"
      - queue clear
    }
    else {
      - give i@<context.args.get[1]>[display_name=<def[Name].replace[_].with[<&sp>]>;lore=<def[Lore].replace[_].with[<&sp>]>] quantity:<context.args.get[2]>
      - narrate "<&7><player.name> created <&f><context.args.get[2]><&7> of <&f>[<context.args.get[1]>]" targets:<server.list_online_ops>
      - queue clear
    }
  }
  else {
    - narrate "<&7>Too many arguments! <&f>'/Item (item) (amount) (name) (lore)'"
  }

I_Command:
  type: command
  debug: false
  name: I
  usage: /I (item) (amount) (name) (lore)
  description: Create items with custom name and lore. For spaces in name and lore, use an underscore. For new line in the lore, a pipe symbol.
  permission: utility.item
  permission message: <&7>Sorry, <&6><player.name><&7>. You cannot use this command because you do not have the permission <&f>'<permission>'<&7>!
  tab complete: 
  - if !<player.is_op||<context.server>> queue clear 
  - determine <server.list_online_players.parse[name].filter[starts_with[<context.args.last>]]>
  script:
  - if <context.args.size> == 0 {
    - narrate "<&7>You must specify an item!"
    - queue clear
  }
  else if <context.args.size> == 1 {
    - if <context.args.get[1]> matches item {
      - give i@<context.args.get[1]> quantity:1
      - narrate "<&7><player.name> created <&6>1<&7> of <&6><context.args.get[1]><&7>!" targets:<server.list_online_ops>
      - queue clear
    }
    else {
      - narrate "<&7>No item can be found by that name!"
      - queue clear
    }
  }
  else if <context.args.size> == 2 {
    - if <context.args.get[1]> !matches item {
      - narrate "<&7>No item can be found by that name!"
      - queue clear
    }
    else if <context.args.get[2]> !matches number {
      - narrate "<&7>You must specify a proper amount!"
      - queue clear
    }
    else {
      - give i@<context.args.get[1]> quantity:<context.args.get[2]>
      - narrate "<&7><player.name> created <&6><context.args.get[2]><&7> of <&6><context.args.get[1]><&7>!" targets:<server.list_online_ops>
      - queue clear
    }
  }
  else if <context.args.size> == 3 {
    - define Name el@<context.args.get[3].replace[&].with[&ss]>
    - if i@<context.args.get[1]> !matches item {
      - narrate "<&7>No item can be found by that name!"
      - queue clear
    }
    else if <context.args.get[2]> !matches number {
      - narrate "<&7>You must specify a proper amount!"
      - queue clear
    }
    else {
      - give i@<context.args.get[1]>[display_name=<def[Name].replace[_].with[<&sp>]>] quantity:<context.args.get[2]>
      - narrate "<&7><player.name> created <&f><context.args.get[2]><&7> of <&f>[<context.args.get[1]>]" targets:<server.list_online_ops>
      - queue clear
    }
  }
  else if <context.args.size> == 4 {
    - define Name el@<context.args.get[3].replace[&].with[&ss]>
    - define Lore el@<context.args.get[4].replace[&].with[&ss]>
    - if i@<context.args.get[1]> !matches item {
      - narrate "<&7>No item can be found by that name!"
      - queue clear
    }
    else if <context.args.get[2]> !matches number {
      - narrate "<&7>You must specify a proper amount!"
      - queue clear
    }
    else {
      - give i@<context.args.get[1]>[display_name=<def[Name].replace[_].with[<&sp>]>;lore=<def[Lore].replace[_].with[<&sp>]>] quantity:<context.args.get[2]>
      - narrate "<&7><player.name> created <&f><context.args.get[2]><&7> of <&f>[<context.args.get[1]>]" targets:<server.list_online_ops>
      - queue clear
    }
  }
  else {
    - narrate "<&7>Too many arguments! <&f>'/Item (item) (amount) (name) (lore)'"
  }

Enchant_Command:
  type: command
  debug: false
  name: Enchant
  usage: /Enchant (enchantment/list) (level)
  description: Enchants the item in your hand or displays all enchantments. Doing the command without any variables will open a menu.
  permission: utility.enchant
  permission message: <&7>Sorry, <&6><player.name><&7>. You cannot use this command because you do not have the permission <&f>'<permission>'<&7>!
  script:
  - if <player.item_in_hand> == i@air {
    - narrate "<&7>You must have an item in your hand!"
    - queue clear
  }
  else { 
    - if <context.args.size> == 0 {
      - inventory open d:in@Enchant_Menu
      - queue clear
    }
    else if <context.args.size> == 1 {
      - if <context.args.get[1]> == list {
        - narrate "<&6>Enchantments<&co> <&f><li@ARROW_DAMAGE|ARROW_FIRE|ARROW_INFINITE|ARROW_KNOCKBACK|BINDING_CURSE|DAMAGE_ALL|DAMAGE_ARTHROPODS|DAMAGE_UNDEAD|DEPTH_STRIDER|DIG_SPEED|DURABILITY|FIRE_ASPECT|FROST_WALKER|KNOCKBACK|LOOT_BONUS_BLOCKS|LOOT_BONUS_MOBS|LUCK|LURE|MENDING|OXYGEN|PROTECTION_ENVIRONMENTAL|PROTECTION_EXPLOSIONS|PROTECTION_FALL|PROTECTION_FIRE|PROTECTION_PROJECTILE|SILK_TOUCH|SWEEPING_EDGE|THORNS|VANISHING_CURSE|WATER_WORKER.formatted>"
        - queue clear 
      }
      - if <li@ARROW_DAMAGE|ARROW_FIRE|ARROW_INFINITE|ARROW_KNOCKBACK|BINDING_CURSE|DAMAGE_ALL|DAMAGE_ARTHROPODS|DAMAGE_UNDEAD|DEPTH_STRIDER|DIG_SPEED|DURABILITY|FIRE_ASPECT|FROST_WALKER|KNOCKBACK|LOOT_BONUS_BLOCKS|LOOT_BONUS_MOBS|LUCK|LURE|MENDING|OXYGEN|PROTECTION_ENVIRONMENTAL|PROTECTION_EXPLOSIONS|PROTECTION_FALL|PROTECTION_FIRE|PROTECTION_PROJECTILE|SILK_TOUCH|SWEEPING_EDGE|THORNS|VANISHING_CURSE|WATER_WORKER.contains[<context.args.get[1]>]> {
        - adjust <player.item_in_hand> enchantments:<player.item_in_hand.enchantments.with_levels.separated_by[|]>|<context.args.get[1]>,1 save:new_enchantments
        - take iteminhand quantity:<player.item_in_hand.quantity>
        - give <entry[new_enchantments].result> slot:<player.item_in_hand.slot>
        - narrate "<&7>Enchanted <&6><player.item_in_hand.formatted><&7> with level <&6>1 <&7>of <&6><context.args.get[1]><&7>!"
        - queue clear
      }
      else {
        - narrate "<&7>This enchantment doesn't exist. Did you mean <&6><li@ARROW_DAMAGE|ARROW_FIRE|ARROW_INFINITE|ARROW_KNOCKBACK|BINDING_CURSE|DAMAGE_ALL|DAMAGE_ARTHROPODS|DAMAGE_UNDEAD|DEPTH_STRIDER|DIG_SPEED|DURABILITY|FIRE_ASPECT|FROST_WALKER|KNOCKBACK|LOOT_BONUS_BLOCKS|LOOT_BONUS_MOBS|LUCK|LURE|MENDING|OXYGEN|PROTECTION_ENVIRONMENTAL|PROTECTION_EXPLOSIONS|PROTECTION_FALL|PROTECTION_FIRE|PROTECTION_PROJECTILE|SILK_TOUCH|SWEEPING_EDGE|THORNS|VANISHING_CURSE|WATER_WORKER.closest_to[<context.args.get[1]>]><&7>?"
        - queue clear
      }
    }
    else if <context.args.size> >= 2 {
      - define Number el@<context.args.get[2]>
      -  if <def[Number].as_int> == null {
        - narrate "<&7>You must specify a proper enchantment level!"
        - queue clear
      }
      - if <li@ARROW_DAMAGE|ARROW_FIRE|ARROW_INFINITE|ARROW_KNOCKBACK|BINDING_CURSE|DAMAGE_ALL|DAMAGE_ARTHROPODS|DAMAGE_UNDEAD|DEPTH_STRIDER|DIG_SPEED|DURABILITY|FIRE_ASPECT|FROST_WALKER|KNOCKBACK|LOOT_BONUS_BLOCKS|LOOT_BONUS_MOBS|LUCK|LURE|MENDING|OXYGEN|PROTECTION_ENVIRONMENTAL|PROTECTION_EXPLOSIONS|PROTECTION_FALL|PROTECTION_FIRE|PROTECTION_PROJECTILE|SILK_TOUCH|SWEEPING_EDGE|THORNS|VANISHING_CURSE|WATER_WORKER.contains[<context.args.get[1]>]> {
        - adjust <player.item_in_hand> enchantments:<player.item_in_hand.enchantments.with_levels.separated_by[|]>|<context.args.get[1]>,<context.args.get[2]> save:new_enchantments
        - take iteminhand quantity:<player.item_in_hand.quantity>
        - give <entry[new_enchantments].result> slot:<player.item_in_hand.slot>
        - narrate "<&7>Enchanted <&6><player.item_in_hand.formatted><&7> with level <&6><context.args.get[2]> <&7>of <&6><context.args.get[1]><&7>!"
        - queue clear
      }
      else {
        - narrate "<&7>Enchantment doesn't exist. Did you mean<&co> <&6><li@ARROW_DAMAGE|ARROW_FIRE|ARROW_INFINITE|ARROW_KNOCKBACK|BINDING_CURSE|DAMAGE_ALL|DAMAGE_ARTHROPODS|DAMAGE_UNDEAD|DEPTH_STRIDER|DIG_SPEED|DURABILITY|FIRE_ASPECT|FROST_WALKER|KNOCKBACK|LOOT_BONUS_BLOCKS|LOOT_BONUS_MOBS|LUCK|LURE|MENDING|OXYGEN|PROTECTION_ENVIRONMENTAL|PROTECTION_EXPLOSIONS|PROTECTION_FALL|PROTECTION_FIRE|PROTECTION_PROJECTILE|SILK_TOUCH|SWEEPING_EDGE|THORNS|VANISHING_CURSE|WATER_WORKER.closest_to[<context.args.get[1]>]><&7>?"
        - queue clear
      }
    }
    else {
      - narrate "<&7>Too many arguments! <&f>'/Enchant (enchantment/list) (level)'"
    }
  }

Enchant_Menu:
  type: Inventory
  inventory: HOPPER
  title: <&6><&l>Select Category<&co>
  slots:
  - "[i@Armor_Icon] [i@Weapons_Icon] [i@Tools_Icon] [i@Misc_Icon] [i@Exit_Icon]"

Enchant_Level_Menu:
  type: Inventory
  title: <&6><&l>Select Enchantment Level<&co>
  size: 18
  slots:
  - "[i@Enchantment_Level_1] [i@Enchantment_Level_2[quantity=2]] [i@Enchantment_Level_3[quantity=3]] [i@Enchantment_Level_4[quantity=4]] [i@Enchantment_Level_5[quantity=5]] [] [] [] [i@Exit_Icon]"
  - "[i@Enchantment_Level_6[quantity=6]] [i@Enchantment_Level_7[quantity=7]] [i@Enchantment_Level_8[quantity=8]] [i@Enchantment_Level_9[quantity=9]] [i@Enchantment_Level_10[quantity=10]] [] [] [] [i@i@Back_Icon]"

Enchant_Menu_Handler:
  type: world
  debug: false
  events:
    on player clicks Enchantment_Level_1 in Enchant_Level_Menu:
    - flag player Enchantment_Level:1
    - inject Enchanting_Process
    on player clicks Enchantment_Level_2 in Enchant_Level_Menu:
    - flag player Enchantment_Level:2
    - inject Enchanting_Process
    on player clicks Enchantment_Level_3 in Enchant_Level_Menu:
    - flag player Enchantment_Level:3
    - inject Enchanting_Process
    on player clicks Enchantment_Level_4 in Enchant_Level_Menu:
    - flag player Enchantment_Level:4
    - inject Enchanting_Process
    on player clicks Enchantment_Level_5 in Enchant_Level_Menu:
    - flag player Enchantment_Level:5
    - inject Enchanting_Process
    on player clicks Enchantment_Level_6 in Enchant_Level_Menu:
    - flag player Enchantment_Level:6
    - inject Enchanting_Process
    on player clicks Enchantment_Level_7 in Enchant_Level_Menu:
    - flag player Enchantment_Level:7
    - inject Enchanting_Process
    on player clicks Enchantment_Level_8 in Enchant_Level_Menu:
    - flag player Enchantment_Level:8
    - inject Enchanting_Process
    on player clicks Enchantment_Level_9 in Enchant_Level_Menu:
    - flag player Enchantment_Level:9
    - inject Enchanting_Process
    on player clicks Enchantment_Level_10 in Enchant_Level_Menu:
    - flag player Enchantment_Level:10
    - inject Enchanting_Process
    on player clicks in Enchant_Menu:
    - determine cancelled
    on player drags in Enchant_Menu:
    - determine cancelled
    on player clicks in Enchant_Level_Menu:
    - determine cancelled
    on player drags in Enchant_Level_Menu:
    - determine cancelled
    on player clicks in Armor_Enchantments_Menu:
    - determine cancelled
    on player drags in Armor_Enchantments_Menu:
    - determine cancelled
    on player clicks in Weapon_Enchantments_Menu:
    - determine cancelled
    on player drags in Weapon_Enchantments_Menu:
    - determine cancelled
    on player clicks in Tool_Enchantments_Menu:
    - determine cancelled
    on player drags in Tool_Enchantments_Menu:
    - determine cancelled
    on player clicks in Misc_Enchantments_Menu:
    - determine cancelled
    on player drags in Misc_Enchantments_Menu:
    - determine cancelled
    on player clicks Exit_Icon in Enchant_Menu:
    - inventory close
    on player clicks Exit_Icon in Enchant_Level_Menu:
    - inventory close
    on player clicks Exit_Icon in Armor_Enchantments_Menu:
    - inventory close
    on player clicks Exit_Icon in Weapon_Enchantments_Menu:
    - inventory close
    on player clicks Exit_Icon in Tool_Enchantments_Menu:
    - inventory close
    on player clicks Exit_Icon in Misc_Enchantments_Menu:
    - inventory close
    on player clicks Back_Icon in Enchant_Level_Menu:
    - inventory open d:in@<player.flag[Previous_Menu]>
    on player clicks Back_Icon in Armor_Enchantments_Menu:
    - inventory open d:in@Enchant_Menu
    on player clicks Back_Icon in Weapon_Enchantments_Menu:
    - inventory open d:in@Enchant_Menu
    on player clicks Back_Icon in Tool_Enchantments_Menu:
    - inventory open d:in@Enchant_Menu
    on player clicks Back_Icon in Misc_Enchantments_Menu:
    - inventory open d:in@Enchant_Menu
    on player clicks Armor_Icon in Enchant_Menu:
    - inventory open d:in@Armor_Enchantments_Menu
    on player clicks Weapons_Icon in Enchant_Menu:
    - inventory open d:in@Weapon_Enchantments_Menu
    on player clicks Tools_Icon in Enchant_Menu:
    - inventory open d:in@Tool_Enchantments_Menu
    on player clicks Misc_Icon in Enchant_Menu:
    - inventory open d:in@Misc_Enchantments_Menu
    on player clicks Unbreaking_Icon in Armor_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Armor_Enchantments_Menu
    - flag player Enchantment:DURABILITY
    on player clicks Thorns_Icon in Armor_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Armor_Enchantments_Menu
    - flag player Enchantment:THORNS
    on player clicks Protection_Icon in Armor_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Armor_Enchantments_Menu
    - flag player Enchantment:PROTECTION_ENVIRONMENTAL
    on player clicks Fire_Protection_Icon in Armor_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Armor_Enchantments_Menu
    - flag player Enchantment:PROTECTION_FIRE
    on player clicks Projectile_Protection_Icon in Armor_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Armor_Enchantments_Menu
    - flag player Enchantment:PROTECTION_PROJECTILE
    on player clicks Blast_Protection_Icon in Armor_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Armor_Enchantments_Menu
    - flag player Enchantment:PROTECTION_EXPLOSIONS
    on player clicks Respiration_Icon in Armor_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Armor_Enchantments_Menu
    - flag player Enchantment:OXYGEN
    on player clicks Aqua_Affinity_Icon in Armor_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Armor_Enchantments_Menu
    - flag player Enchantment:WATER_WORKER
    on player clicks Feather_Falling_Icon in Armor_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Armor_Enchantments_Menu
    - flag player Enchantment:PROTECTION_FALL
    on player clicks Depth_Strider_Icon in Armor_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Armor_Enchantments_Menu
    - flag player Enchantment:DEPTH_STRIDER
    on player clicks Frost_Walker_Icon in Armor_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Armor_Enchantments_Menu
    - flag player Enchantment:FROST_WALKER
    on player clicks Unbreaking_Icon in Weapon_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Weapon_Enchantments_Menu
    - flag player Enchantment:DURABILITY
    on player clicks Sharpness_Icon in Weapon_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Weapon_Enchantments_Menu
    - flag player Enchantment:DAMAGE_ALL
    on player clicks Smite_Icon in Weapon_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Weapon_Enchantments_Menu
    - flag player Enchantment:DAMAGE_UNDEAD
    on player clicks Bane_Of_Anthropods_Icon in Weapon_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Weapon_Enchantments_Menu
    - flag player Enchantment:DAMAGE_ARTHROPODS
    on player clicks Knockback_Icon in Weapon_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Weapon_Enchantments_Menu
    - flag player Enchantment:KNOCKBACK
    on player clicks Fire_Aspect_Icon in Weapon_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Weapon_Enchantments_Menu
    - flag player Enchantment:FIRE_ASPECT
    on player clicks Looting_Icon in Weapon_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Weapon_Enchantments_Menu
    - flag player Enchantment:LOOT_BONUS_MOBS
    on player clicks Sweeping_Edge_Icon in Weapon_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Weapon_Enchantments_Menu
    - flag player Enchantment:SWEEPING_EDGE
    on player clicks Power_Icon in Weapon_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Weapon_Enchantments_Menu
    - flag player Enchantment:ARROW_DAMAGE
    on player clicks Punch_Icon in Weapon_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Weapon_Enchantments_Menu
    - flag player Enchantment:ARROW_KNOCKBACK
    on player clicks Flame_Icon in Weapon_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Weapon_Enchantments_Menu
    - flag player Enchantment:ARROW_FIRE
    on player clicks Infinity_Icon in Weapon_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Weapon_Enchantments_Menu
    - flag player Enchantment:ARROW_INFINITE
    on player clicks Unbreaking_Icon in Tool_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Tool_Enchantments_Menu
    - flag player Enchantment:DURABILITY
    on player clicks Efficiency_Icon in Tool_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Tool_Enchantments_Menu
    - flag player Enchantment:DIG_SPEED
    on player clicks Fortune_Icon in Tool_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Tool_Enchantments_Menu
    - flag player Enchantment:LOOT_BONUS_BLOCKS
    on player clicks Silk_Touch_Icon in Tool_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Tool_Enchantments_Menu
    - flag player Enchantment:SILK_TOUCH
    on player clicks Luck_Of_The_Sea_Icon in Tool_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Tool_Enchantments_Menu
    - flag player Enchantment:LUCK
    on player clicks Lure_Icon in Tool_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Tool_Enchantments_Menu
    - flag player Enchantment:LURE
    on player clicks Mending_Icon in Misc_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Misc_Enchantments_Menu
    - flag player Enchantment:MENDING
    on player clicks Curse_of_Binding_Icon in Misc_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Misc_Enchantments_Menu
    - flag player Enchantment:BINDING_CURSE
    on player clicks Curse_of_Vanishing_Icon in Misc_Enchantments_Menu:
    - inventory open d:in@Enchant_Level_Menu
    - flag player Previous_Menu:Misc_Enchantments_Menu
    - flag player Enchantment:VANISHING_CURSE

Enchanting_Process:
  type: task
  script:
    - adjust <player.item_in_hand> enchantments:<player.item_in_hand.enchantments.with_levels.separated_by[|]>|<player.flag[Enchantment]>,<player.flag[Enchantment_Level]> save:new_enchantments
    - take iteminhand quantity:<player.item_in_hand.quantity>
    - give <entry[new_enchantments].result> slot:<player.item_in_hand.slot>
    - narrate "<&7>Enchanted <&6><player.item_in_hand.formatted><&7> with level <&6><player.flag[Enchantment_Level]> <&7>of <&6><player.flag[Enchantment]><&7>!"
    - inventory close

Armor_Enchantments_Menu:
  type: Inventory
  title: <&6><&l>Select Enchantment<&co>
  size: 18
  slots:
  - "[i@Unbreaking_Icon] [i@Thorns_Icon] [i@Protection_Icon] [i@Fire_Protection_Icon] [i@Projectile_Protection_Icon] [i@Blast_Protection_Icon] [] [] [i@Exit_Icon]"
  - "[i@Respiration_Icon] [i@Aqua_Affinity_Icon] [i@Feather_Falling_Icon] [i@Depth_Strider_Icon] [i@Frost_Walker_Icon] [] [] [] [i@Back_Icon]"

Weapon_Enchantments_Menu:
  type: Inventory
  title: <&6><&l>Select Enchantment<&co>
  size: 18
  slots:
  - "[i@Unbreaking_Icon] [i@Sharpness_Icon] [i@Smite_Icon] [i@Bane_Of_Anthropods_Icon] [i@Knockback_Icon] [i@Fire_Aspect_Icon] [] [] [i@Exit_Icon]"
  - "[i@Looting_Icon] [i@Sweeping_Edge_Icon] [i@Power_Icon] [i@Punch_Icon] [i@Flame_Icon] [i@Infinity_Icon] [] [] [i@Back_Icon]"

Tool_Enchantments_Menu:
  type: Inventory
  title: <&6><&l>Select Enchantment<&co>
  size: 9
  slots:
  - "[i@Unbreaking_Icon] [i@Fortune_Icon] [i@Efficiency_Icon] [i@Silk_Touch_Icon] [i@Lure_Icon] [i@Luck_Of_The_Sea_Icon] [] [i@Back_Icon] [i@Exit_Icon]"

Misc_Enchantments_Menu:
  type: Inventory
  title: <&6><&l>Select Enchantment<&co>
  size: 9
  slots:
  - "[i@Mending_Icon] [i@Curse_of_Vanishing_Icon] [i@Curse_of_Binding_Icon] [] [] [] [] [i@Back_Icon] [i@Exit_Icon]"

Back_Icon:
  type: item
  material: paper
  display name: <&e>Previous Page 
  lore:
  - <&a>Click here to go back to the previous page.

Enchantment_Level_1:
  type: item
  material: 384
  display name: <&6>Enchantment Level<&co> <&e>1 
  lore:
  - <&a>Click here to enchant the item!

Enchantment_Level_2:
  type: item
  material: 384
  display name: <&6>Enchantment Level<&co> <&e>2
  lore:
  - <&a>Click here to enchant the item!

Enchantment_Level_3:
  type: item
  material: 384
  display name: <&6>Enchantment Level<&co> <&e>3
  lore:
  - <&a>Click here to enchant the item!

Enchantment_Level_4:
  type: item
  material: 384
  display name: <&6>Enchantment Level<&co> <&e>4
  lore:
  - <&a>Click here to enchant the item!

Enchantment_Level_5:
  type: item
  material: 384
  display name: <&6>Enchantment Level<&co> <&e>5
  lore:
  - <&a>Click here to enchant the item!

Enchantment_Level_6:
  type: item
  material: 384
  display name: <&6>Enchantment Level<&co> <&e>6
  lore:
  - <&a>Click here to enchant the item!

Enchantment_Level_7:
  type: item
  material: 384
  display name: <&6>Enchantment Level<&co> <&e>7
  lore:
  - <&a>Click here to enchant the item!

Enchantment_Level_8:
  type: item
  material: 384
  display name: <&6>Enchantment Level<&co> <&e>8
  lore:
  - <&a>Click here to enchant the item!

Enchantment_Level_9:
  type: item
  material: 384
  display name: <&6>Enchantment Level<&co> <&e>9
  lore:
  - <&a>Click here to enchant the item!

Enchantment_Level_10:
  type: item
  material: 384
  display name: <&6>Enchantment Level<&co> <&e>10
  lore:
  - <&a>Click here to enchant the item!
  
Armor_Icon:
  type: item
  material: iron_chestplate
  display name: <&6>Armor Enchantments
  lore:
  - <&a>Click here to select an enchantment.

Weapons_Icon:
  type: item
  material: iron_sword
  display name: <&6>Weapon Enchantments
  lore:
  - <&a>Click here to select an enchantment.

Tools_Icon:
  type: item
  material: iron_pickaxe
  display name: <&6>Tool Enchantments
  lore:
  - <&a>Click here to select an enchantment.

Misc_Icon:
  type: item
  material: elytra
  display name: <&6>Miscellaneous Enchantments
  lore:
  - <&a>Click here to select an enchantment.

Efficiency_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Efficiency
  lore:
  - <&a>Click here to select an enchantment.

Silk_Touch_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Silk Touch
  lore:
  - <&a>Click here to select an enchantment.

Fortune_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Fortune
  lore:
  - <&a>Click here to select an enchantment.

Luck_Of_The_Sea_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Luck of the Sea
  lore:
  - <&a>Click here to select an enchantment.

Lure_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Lure
  lore:
  - <&a>Click here to select an enchantment.

Sharpness_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Sharpness
  lore:
  - <&a>Click here to specify a level.

Efficiency_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Efficiency
  lore:
  - <&a>Click here to specify a level.

Smite_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Smite
  lore:
  - <&a>Click here to specify a level.

Bane_Of_Anthropods_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Bane of Arthropods
  lore:
  - <&a>Click here to specify a level.

Knockback_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Knockback
  lore:
  - <&a>Click here to specify a level.

Fire_Aspect_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Fire Aspect
  lore:
  - <&a>Click here to specify a level.

Looting_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Looting
  lore:
  - <&a>Click here to specify a level.

Sweeping_Edge_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Sweeping Edge
  lore:
  - <&a>Click here to specify a level.

Power_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Power
  lore:
  - <&a>Click here to specify a level.

Punch_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Punch
  lore:
  - <&a>Click here to specify a level.

Flame_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Flame
  lore:
  - <&a>Click here to specify a level.

Infinity_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Infinity
  lore:
  - <&a>Click here to specify a level.

Unbreaking_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Unbreaking
  lore:
  - <&a>Click here to specify a level.

Protection_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Protection
  lore:
  - <&a>Click here to specify a level.

Fire_Protection_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Fire Protection
  lore:
  - <&a>Click here to specify a level.

Fall_Protection_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Fall Protection
  lore:
  - <&a>Click here to specify a level.

Blast_Protection_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Blast Protection
  lore:
  - <&a>Click here to specify a level.

Projectile_Protection_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Projectile Protection
  lore:
  - <&a>Click here to specify a level.

Respiration_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Respiration
  lore:
  - <&a>Click here to specify a level.

Aqua_Affinity_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Aqua Affinity
  lore:
  - <&a>Click here to specify a level.

Thorns_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Thorns
  lore:
  - <&a>Click here to specify a level.

Depth_Strider_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Depth Strider
  lore:
  - <&a>Click here to specify a level.

Frost_Walker_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Frost Walker
  lore:
  - <&a>Click here to specify a level.

Feather_Falling_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Feather Falling
  lore:
  - <&a>Click here to specify a level.

Curse_of_Binding_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Curse of Binding
  lore:
  - <&a>Click here to specify a level.

Curse_of_Vanishing_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Curse of Vanishing
  lore:
  - <&a>Click here to specify a level.

Mending_Icon:
  type: item
  material: enchanted_book
  display name: <&6>Mending
  lore:
  - <&a>Click here to specify a level.