Berserker_Stat_Config:
  type: yaml data
  Class_Resource: Rage
  Default_Skill_List: li@i@Cleave|i@BattleCry|i@Overpower|i@Unassigned_Skill|i@Unassigned_Skill|i@Unassigned_Skill
  Health: 150
  Melee Damage: 8

Berserker_Skill_Config:
  type: yaml data
  ## Cleave ##
  Cleave_Cooldown: 3
  Cleave_Damage: 10
  Cleave_Range: 6
  Cleave_Cost: 2
  ## Battle Cry ##
  BattleCry_Cooldown: 12
  BattleCry_Buff: 
  BattleCry_Cost: 4
  ## Overpower ##
  Overpower_Range: 6
  Overpower_Cooldown: 3
  Overpower_Damage: 25
  Overpower_Stun_Duration: 2
  Overpower_Cost: 3
  Overpower_Message: "<&a><&l>[Skill] <&f><player.name> <&7>has used <&f><def[Skill].to_titlecase> <&7>on <&f><def[target].name><&7>!"
  ## Leap ##
  Leap_Damage: 20
  Leap_Cooldown: 3
  Leap_Stun_Duration: 2.5
  Leap_Radius: 3

Berserker_World_Handler:
  type: world
  debug: false
  events:
    on player login:
    - wait 1s
    - while <player.is_online> {
      - define Mana <yaml[<player.uuid>].read[General.Mana].as_int>
      - adjust <player> fake_experience:<def[Mana].div[20]>|<def[Mana]>
      - if <player.flag[Class]> == Berserker {
        - if !<player.has_flag[In_Combat]> {
          - if <def[Mana]> >= 1 {
            - yaml id:<player.uuid> set General.Mana:<def[Mana].sub[1]>
            - define Mana <def[Mana].sub[1]>
            - adjust <player> fake_experience:<def[Mana].div[20]>|<def[Mana]>
          }
          else if <def[Mana]> <= 1 {
            - yaml id:<player.uuid> set General.Mana:0
            - adjust <player> fake_experience:0.0|0
          }
        }
      }
      - wait 1s
    }
    on player damages entity:
    - if <player.flag[Class]> == Berserker {
      - if <context.cause> == entity_attack {
        - define Mana <yaml[<player.uuid>].read[General.Mana].as_int>
        - if <def[Mana].add[2]> >= 20 {
          - yaml id:<player.uuid> set General.Mana:20
          - adjust <player> fake_experience:1.0|20
        }
        else if <def[Mana]> < 18 {
          - yaml id:<player.uuid> set General.Mana:<def[Mana].add[2]>
          - define Mana <def[Mana].add[2]>
          - adjust <player> fake_experience:<def[Mana].div[20]>|<def[Mana]>
        }
      }
    }

Berserker_Skills_Menu:
  type: Inventory
  debug: false
  title: <&6><&l>Berserker Skills<&co>
  size: 36
  slots:
  - "[<player.inventory.slot[1]>] [<player.inventory.slot[2]>] [<player.inventory.slot[3]>] [<player.inventory.slot[4]>] [<player.inventory.slot[5]>] [<player.inventory.slot[6]>] [] [] [i@Exit_Icon]"
  - "[i@Filler_Icon] [i@Filler_Icon] [i@Filler_Icon] [i@Filler_Icon] [i@Filler_Icon] [i@Filler_Icon] [i@Filler_Icon] [i@Filler_Icon] [i@Filler_Icon]"
  - "[i@red_dye] [i@Cleave] [i@BattleCry] [i@Overpower] [] [] [] [] []"
  - "[i@Leap] [] [] [] [] [] [] [] []"

Berserker_Skills_Menu_Handler:
  type: world
  debug: false
  events:
    on player clicks in Berserker_Skills_Menu:
    - determine cancelled
    on player drags in Berserker_Skills_Menu:
    - determine cancelled
    on player clicks Leap in Berserker_Skills_Menu:
    - inject Selection_Process
    on player clicks Exit_Icon in Berserker_Skills_Menu:
    - inventory close
    on player closes Berserker_Skills_Menu:
    - inject Skill_Bar_Management

Class_Health_Handler:
  type: world
  debug: true
  events:
    on player logs in:
    - wait 1t
    - adjust <player> scale_health:true
    - foreach '<player.inventory.list_contents.with_lore[Unassigned Skill]>' {
      - take <def[value]> quantity:64
    }
    - foreach '<player.inventory.list_contents.with_lore[Default Skill]>' {
      - take <def[value]> quantity:64
    }
    - foreach '<player.inventory.list_contents.with_lore[Optional Skill]>' {
      - take <def[value]> quantity:64
    }
    - if <yaml[<player.uuid>].contains[<player.flag[Class]>.Skill_Bar.Skills]> {
      - define Slot 1
      - foreach <yaml[<player.uuid>].read[<player.flag[Class]>.Skill_Bar.Skills]> {
        - inventory set origin:<def[value]> slot:<def[Slot]>
        - define Slot <def[Slot].add[1]>
      }
    }
    else {
      - define Slot 1
      - define Stat_Config s@<player.flag[Class]>_Stat_Config
      - foreach <def[Stat_Config].yaml_key[Default_Skill_List]> {
        - inventory set origin:<def[value]> slot:<def[Slot]>
        - define Slot <def[Slot].add[1]>
      }
    }

Leap:
  type: item
  debug: false
  material: 443
  display name: <&c><&l>Leap 
  lore:
  - <&a>Optional Skill
  - <&sp>
  - <&2>Type<&co> <&a>[Launch] <&6>Mobility
  - <&2>Description<&co> <&6>Leap forward stunning everybody
  - <&6>where you land, dealing damage to them and
  - <&6>generating rage.

Leap_Cast:
  type: task
  debug: false
  speed: 0
  script:
    - if <player.has_flag[Leap_Cooldown]> {
      - narrate "<&a><&l>[Skill] <&f>Leap <&7>has <&f><player.flag[Leap_Cooldown].expiration.in_seconds.round_to[1]>s <&7>until it's ready!"
      - queue clear
    }
    - push <player> origin:<player.location> destination:<player.location.cursor_on[5].add[0,3,0]> speed:1.5 duration:1t script:Leap_Effect no_damage no_rotate

Leap_Effect:
  type: task
  debug: false
  speed: 0
  script:
    - flag player In_Air duration:5s
    - wait 10t
    - while <player.has_flag[In_Air]> {      
      - if <player.location.below.material> != m@air {
        - flag player In_Air:!
      }
      - wait 1t
    }
    - foreach <player.location.find.living_entities.within[<s@Berserker_Skill_Config.yaml_key[Leap_Radius].as_decimal||2>].exclude[<player>]> {
      - run Stun_Effect def:<s@Berserker_Skill_Config.yaml_key[Overpower_Stun_Duration].as_decimal||2.5>|<def[value]>
      - hurt <s@Berserker_Skill_Config.yaml_key[Leap_Damage].as_int||5> <def[Value]> cause:custom 
    }
    - define Location <player.location.below>
    - playsound <def[Location]> sound:ENTITY_ENDERDRAGON_FIREBALL_EXPLODE volume:50 pitch:1
    - repeat 4 {
      - playeffect <def[Location]> effect:LAVA visibility:25 quantity:20 offset:1.0,0,1.0 
      - wait 1t
    }

Overpower:
  type: item
  debug: false
  material: 385
  display name: <&c><&l>Overpower
  lore:
  - <&e>Default Skill <&7><&l>
  - <&sp> 
  - <&2>Type<&co> <&a>[Targeted] <&6>Damage and CC
  - <&2>Description<&co> <&6>Dash forward bashing into 
  - <&6>the target stunning and dealing damage.
  - <&sp>
  - <&6>Only usable while <&e><&o>Enraged!

Overpower_Cast:
  type: task
  debug: false
  speed: 0
  script:
    - if !<player.has_flag[Enraged]> {
      - narrate "<&a><&l>[Skill] <&7>You are not <&f>Enraged<&7>!"
      - queue clear
    }
    - define target <player.target.within[<s@Berserker_Skill_Config.yaml_key[Overpower_Range].as_int||5>]>
    - if <def[target]> != null {
      - if <def[target].entity_type> == ARMOR_STAND {
        - define new_target <def[target].location.find.living_entities.within[1].exclude[<player>|<def[target]>].get[1]>
        - run Stun_Effect def:<s@Berserker_Skill_Config.yaml_key[Overpower_Stun_Duration].as_decimal||2>|<def[new_target]>
        - push <player> destination:<def[new_target].location.add[0,0.3,0]> speed:0.8 duration:1t no_rotate no_damage
        - hurt <s@Berserker_Skill_Config.yaml_key[Overpower_Damage].as_int||15> <def[new_target]> cause:custom 
        - playeffect <def[new_target].location.add[0,1,0]> effect:blockcrack_152 visibility:25 quantity:15 offset:0.4
        - define target <def[new_target]>
      }
      else {
        - run Stun_Effect def:<s@Berserker_Skill_Config.yaml_key[Overpower_Stun_Duration].as_decimal||2>|<def[target]>
        - push <player> destination:<def[target].location.add[0,0.3,0]> speed:0.8 duration:1t no_rotate no_damage
        - hurt <s@Berserker_Skill_Config.yaml_key[Overpower_Damage].as_int||15> <def[target]> cause:custom 
        - playeffect <def[target].location.add[0,1,0]> effect:blockcrack_152 visibility:25 quantity:15 offset:0.4
      }
    }
    else {
      - queue clear
    }

BattleCry:
  type: item
  debug: false
  material: 2260
  display name: <&c><&l>BattleCry
  lore:
  - <&e>Default Skill <&7><&l>
  - <&sp>
  - <&2>Type<&co> <&a>[Self Cast] <&6>Damage buff + AoE interrupt
  - <&2>Description<&co> <&6>Let out a terrifying howl interrupting 
  - <&6>nearby enemies. 
  - <&sp>
  - <&6>Additionally if you are carrying an axe in your 
  - <&6>off-hand you will also gain a physical damage 
  - <&6>increase. While the effect is active you will be 
  - <&6>considered <&e><&o>Enraged<&6>, lasting the duration of 
  - <&6>the buff.

BattleCry_Cast:
  type: task
  debug: false
  speed: 0
  script:
    - playeffect <player.location.add[0,1,0]> effect:NOTE visibility:25 quantity:5 offset:0.4
    - playsound <player.location> sound:ENTITY_POLAR_BEAR_WARNING volume:1.5 pitch:0.7
    - flag player Enraged duration:6
    - flag player BattleCry_Cooldown duration:12

Cleave:
  type: item
  debug: false
  material: iron_axe
  display name: <&c><&l>Cleave
  lore:
  - <&e>Default Skill <&7><&l>
  - <&sp>
  - <&2>Type<&co> <&a>[Cone Attack] <&6>Cone damage 
  - <&2>Description<&co> <&6>Do a powerful cleaving strike 
  - <&6>dealing damage to all enemies in front of you.

Cleave_Cast:
  type: task
  debug: false
  speed: 0
  script:
    - playeffect <player.location.cursor_on[2].sub[0,0.5,0]> effect:SWEEP_ATTACK quantity:2 offset:0.2
    - foreach <player.location.find.living_entities.within[<s@Berserker_Skill_Config.yaml_key[Cleave_Range].as_int||6>].exclude[<player>]> {
      - if <player.location.facing[<def[Value]>]> {
        - hurt <s@Berserker_Skill_Config.yaml_key[Cleave_Damage].as_int||5> <def[Value]> cause:custom
      }
    }
